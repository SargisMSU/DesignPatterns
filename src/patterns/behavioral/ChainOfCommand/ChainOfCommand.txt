    Цепочка обязанностей — это поведенческий паттерн проектирования, который позволяет передавать запросы
последовательно по цепочке обработчиков. Каждый последующий обработчик решает, может ли он обработать запрос сам и стоит
ли передавать запрос дальше по цепи.


    Как и многие другие поведенческие паттерны, Цепочка обязанностей базируется на том, чтобы превратить отдельные
поведения в объекты. В нашем случае каждая проверка переедет в отдельный класс с единственным методом выполнения. Данные
запроса, над которым происходит проверка, будут передаваться в метод как аргументы.

    А теперь по-настоящему важный этап. Паттерн предлагает связать объекты обработчиков в одну цепь. Каждый из них будет
иметь ссылку на следующий обработчик в цепи. Таким образом, при получении запроса обработчик сможет не только сам что-то
с ним сделать, но и передать обработку следующему объекту в цепочке.

    Передавая запросы в первый обработчик цепочки, вы можете быть уверены, что все объекты в цепи смогут его обработать.
При этом длина цепочки не имеет никакого значения.

    И последний штрих. Обработчик не обязательно должен передавать запрос дальше, причём эта особенность может быть
использована по-разному.

    В примере с фильтрацией доступа обработчики прерывают дальнейшие проверки, если текущая проверка не прошла. Ведь нет
смысла тратить попусту ресурсы, если и так понятно, что с запросом что-то не так.