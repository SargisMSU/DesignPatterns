Декоратор имеет альтернативное название — обёртка. Оно более точно описывает суть паттерна:
вы помещаете целевой объект в другой объект-обёртку, который запускает базовое поведение объекта,
 а затем добавляет к результату что-то своё.

Оба объекта имеют общий интерфейс, поэтому для пользователя нет никакой разницы,
с каким объектом работать — чистым или обёрнутым.  Декоратор позволяет оборачивать объекты бесчисленное
количество раз благодаря тому, что и обёртки, и реальные оборачиваемые объекты имеют общий интерфейс.


Примеры Декораторов в стандартных библиотеках Java:
Все подклассы java.io.InputStream, OutputStream, Reader и Writer имеют конструктор, принимающий объекты этих же классов.