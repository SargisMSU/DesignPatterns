    Мост — это структурный паттерн проектирования, который разделяет один или несколько классов на две отдельные иерархии
— абстракцию и реализацию, позволяя изменять их независимо друг от друга.

    Например:
    У вас есть класс геометрических Фигур, который имеет подклассы Круг и Квадрат. Вы хотите расширить иерархию фигур по
цвету, то есть иметь Красные и Синие фигуры. Но чтобы всё это объединить, вам придётся создать 4 комбинации подклассов,
вроде  СиниеКруги и КрасныеКвадраты.
Корень проблемы заключается в том, что мы пытаемся расширить классы фигур сразу в двух независимых плоскостях — по виду
и по цвету. Именно это приводит к разрастанию дерева классов.
Паттерн Мост предлагает заменить наследование агрегацией или композицией. Для этого нужно выделить одну из таких
«плоскостей» в отдельную иерархию и ссылаться на объект этой иерархии.
    Таким образом, мы можем сделать Цвет отдельным классом с подклассами Красный и  Синий. Класс Фигур получит ссылку на
объект Цвета и сможет делегировать ему работу, если потребуется. Такая связь и станет мостом между Фигурами и Цветом.
При добавлении новых классов цветов не потребуется трогать классы фигур и наоборот.

Похож очень на СТРАТЕГИЮ, но последнее- поведенческий паттерн и используется для легкого изменения алгоритмов, а не для
обеспечения взаимодействия между двумя объектами(и их наследниками), позволяя независимо друг от друга увеличить иерархии
расширяя функционал взаимодействующих объектов.