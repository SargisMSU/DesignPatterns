    Заместитель — это структурный паттерн проектирования, который позволяет подставлять вместо реальных объектов
специальные объекты-заменители. Эти объекты перехватывают вызовы к оригинальному объекту, позволяя сделать что-то до
или после передачи вызова оригиналу. Это достигается путем имплементирования одного и того же интерфейса как у обьекта,
так и у его заместителя, и делегированием действии обьекту в реализации функции интерфейса в классе заместителя.


Применимость:
    1) Ленивая инициализация (виртуальный прокси). Когда у вас есть тяжёлый объект, грузящий данные из файловой системы
или базы данных.
    2) Защита доступа (защищающий прокси).
Прокси может проверять доступ при каждом вызове и передавать выполнение служебному объекту, если доступ разрешён.
    3) Логирование запросов (логирующий прокси). Когда требуется хранить историю обращений к сервисному объекту.
    4) Кеширование объектов («умная» ссылка). Когда нужно кешировать результаты запросов клиентов и управлять их
жизненным циклом.


